import "@apollo/client"::{ ApolloProvider, gql, useQuery }
import "react"::{
	type ComponentPropsWithoutRef
	type ComponentType
	type FC
	useCallback
	useEffect
	useState
}
import "react-dom"::ReactDOM
import "succulent"::{ is, $string }
import "tsconfig-paths/register"

import "^/components"::{ Card, Row }
import "./hullo"::hi


pub interface AppProps extends ComponentPropsWithoutRef<"div"> {
	?onIncrement count: number -> void
	required -> void
	requiredThatTakesArgs arg: unknown -> void
}

pub fn App props: AppProps -> {
	let [clicks, setClicks] = useState 0

	let onClick = useCallback(
		|| => setClicks |clicks| => clicks + 1,
		[],
	)

	<div>
		<h1>This is my app!</h1>
		<p>The button below has been clicked {clicks} time(s).</p>
		<button {onClick}>Click me!</button>
	</div>
}

let x = 0
let mut y = 1

println x + y

pub fn async getFriend name: string -> Promise<number> {
	new Promise<number> |resolve, reject| => {
		Database.getFriend name, |error, result| => {
			guard reject error if error
			resolve result
		}
	}
}
